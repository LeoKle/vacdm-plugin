name: Build Plugin Dev Release

on:
  push:
    branches:
      - "develop"

env:
  DLL_NAME: vACDM.dll
  BUILD_CONFIGURATION: Release # even though it is a dev release, we build in Release so the DLL is optimized for performance
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WORKSPACE_BUILD: ${{ github.workspace }}/build

jobs:
  formatting-check:
    uses: ./.github/workflows/clang-format.yml

  get-latest-version:
    needs: formatting-check
    uses: ./.github/workflows/get-latest-version.yml

  build:
    needs: get-latest-version
    runs-on: windows-latest
    name: "Build plugin"

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: print version
        run: |
          echo "VERSION=${{ needs.get-latest-version.outputs.version }}"

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Cache Conan packages
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile*') }}-build_type-${{ env.BUILD_CONFIGURATION }}
          restore-keys: |
            ${{ runner.os }}-conan-${{ hashFiles('**/conanfile*') }}-
            ${{ runner.os }}-conan-

      - name: Install Conan packages
        run: |
          conan profile detect
          conan install . --profile=conanprofile --settings=build_type=${{ env.BUILD_CONFIGURATION }} --output-folder=${{env.WORKSPACE_BUILD}} --build=missing

      - name: CMake Setup
        run: cd ${{env.WORKSPACE_BUILD}} && cmake .. -G "Visual Studio 17 2022" -DCMAKE_TOOLCHAIN_FILE=${{env.WORKSPACE_BUILD}}/conan_toolchain.cmake -A Win32

      - name: Build DLL
        run: cmake --build ${{env.WORKSPACE_BUILD}} --config ${{env.BUILD_CONFIGURATION}}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ needs.get-latest-version.outputs.version }}
          release_name: v${{ needs.get-latest-version.outputs.version }}
          draft: true # to allow amendment of release notes
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.WORKSPACE_BUILD}}/${{env.BUILD_CONFIGURATION}}/${{env.DLL_NAME}}
          asset_name: ${{env.DLL_NAME}}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload config file (vacdm.txt)
        id: upload-release-asset-txt
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/config/vacdm.txt
          asset_name: vacdm.txt
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
